#version 460
#extension GL_EXT_ray_tracing : enable

layout(binding = 0, set = 0) uniform accelerationStructureEXT tlas;
layout(binding = 1, set = 0, rgba8) uniform image2D image; 
layout(binding = 0, set = 1) uniform Camera {
    mat4 viewInverse;
    mat4 projInverse;
} cam;

layout(location = 0) rayPayloadEXT vec3 hit_val;

void main() 
{
    // const vec2 pixel_center = vec2(gl_LaunchIDEXT.xy) + vec2(0.5);
    // const vec2 in_uv = pixel_center / vec2(gl_LaunchIDEXT.xy);
    // vec2 d = in_uv * 2.0 - 1.0;

    // vec4 origin = cam.viewInverse * vec4(0, 0, 0, 1);
    // vec4 target = cam.projInverse * vec4(d.x, d.y, 1, 1);
    // vec4 dir = cam.viewInverse * vec4(normalize(target.xyz), 0);

    const vec2 pixelCenter = vec2(gl_LaunchIDEXT.xy) + vec2(0.5);
    const vec2 inUV = pixelCenter / vec2(gl_LaunchSizeEXT.xy);
    vec2 d = inUV * 2.0 - 1.0;

    vec3 origin = (cam.viewInverse * vec4(0, 0, 0, 1)).xyz;
    vec4 target = cam.projInverse * vec4(d.x, d.y, 1, 1);
    vec3 direction = (cam.viewInverse * vec4(normalize(target.xyz), 0)).xyz;

    float tmin = 0.001;
    float tmax = 10000.0;

    traceRayEXT(
        tlas, 
        gl_RayFlagsOpaqueEXT, 
        0xFF, 
        0, 
        0, 
        0, 
        origin.xyz, 
        tmin, 
        direction.xyz, 
        tmax, 
        0
    );

    imageStore(image, ivec2(gl_LaunchIDEXT.xy), vec4(hit_val, 1.0));
}